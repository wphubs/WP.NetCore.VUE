// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WP.NetCore.Repository.EFCore;

namespace WP.NetCore.Repository.EFCore.Migrations
{
    [DbContext(typeof(WPDbContext))]
    partial class WPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Component")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsButton")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Component = "user/index",
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 565, DateTimeKind.Local).AddTicks(5732),
                            Icon = "el-icon-lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            Name = "user",
                            ParentId = 0L,
                            Path = "/user",
                            Sort = 1,
                            Title = "用户管理"
                        },
                        new
                        {
                            Id = 2L,
                            Component = "role/index",
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 565, DateTimeKind.Local).AddTicks(9087),
                            Icon = "el-icon-heavy-rain",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            Name = "role",
                            ParentId = 0L,
                            Path = "/role",
                            Sort = 2,
                            Title = "角色管理"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 565, DateTimeKind.Local).AddTicks(9103),
                            Icon = "nested",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            Name = "nested",
                            ParentId = 0L,
                            Path = "/nested",
                            Sort = 3,
                            Title = "多级"
                        },
                        new
                        {
                            Id = 4L,
                            Component = "nested/menu1/index",
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 565, DateTimeKind.Local).AddTicks(9636),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            Name = "menu1",
                            ParentId = 3L,
                            Path = "/menu1",
                            Sort = 1,
                            Title = "子级11"
                        },
                        new
                        {
                            Id = 5L,
                            Component = "nested/menu2/index",
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 565, DateTimeKind.Local).AddTicks(9642),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            Name = "menu2",
                            ParentId = 3L,
                            Path = "/menu2",
                            Sort = 2,
                            Title = "子级22"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 15167852569281536L,
                            CreateTime = new DateTime(2021, 2, 18, 22, 57, 32, 561, DateTimeKind.Local).AddTicks(9876),
                            IsDelete = false,
                            IsEnable = true,
                            Name = "系统管理员",
                            Password = "670b14728ad9902aecba32e22fa4f6bd",
                            Sex = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
