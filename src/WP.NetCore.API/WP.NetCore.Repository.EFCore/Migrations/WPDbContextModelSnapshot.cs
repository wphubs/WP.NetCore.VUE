// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WP.NetCore.Repository.EFCore;

namespace WP.NetCore.Repository.EFCore.Migrations
{
    [DbContext(typeof(WPDbContext))]
    partial class WPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Component")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsButton")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Component = "user/index",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(6411),
                            Icon = "el-icon-lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 1,
                            Title = "用户管理"
                        },
                        new
                        {
                            Id = 15306603741414401L,
                            Component = "getUser",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(8162),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "查看",
                            Url = "user/get"
                        },
                        new
                        {
                            Id = 15306603741414402L,
                            Component = "addUser",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9483),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "新增",
                            Url = "user/post"
                        },
                        new
                        {
                            Id = 15306603741414403L,
                            Component = "editUser",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9495),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "user/put"
                        },
                        new
                        {
                            Id = 15306603741414404L,
                            Component = "deleteUser",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9499),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "删除",
                            Url = "user/delete"
                        },
                        new
                        {
                            Id = 2L,
                            Component = "role/index",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9508),
                            Icon = "el-icon-heavy-rain",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 2,
                            Title = "角色管理"
                        },
                        new
                        {
                            Id = 15306603741414405L,
                            Component = "getRole",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9510),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看",
                            Url = "role/get"
                        },
                        new
                        {
                            Id = 15306603741414406L,
                            Component = "addRole",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9513),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "新增",
                            Url = "role/post"
                        },
                        new
                        {
                            Id = 15306603741414407L,
                            Component = "editRole",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9516),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "role/put"
                        },
                        new
                        {
                            Id = 15306603741414408L,
                            Component = "deleteRole",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9521),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "删除",
                            Url = "role/delete"
                        },
                        new
                        {
                            Id = 15306603741414409L,
                            Component = "setPermission",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9525),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "设置权限",
                            Url = "role/setPermission/post"
                        },
                        new
                        {
                            Id = 15306603741414410L,
                            Component = "getPermission",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9528),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看权限",
                            Url = "role/getPermission/get"
                        },
                        new
                        {
                            Id = 6L,
                            Component = "menu/index",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9531),
                            Icon = "el-icon-heavy-rain",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 2,
                            Title = "菜单管理"
                        },
                        new
                        {
                            Id = 15306603741414411L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9533),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看菜单树",
                            Url = "menu/getMenuTree/get"
                        },
                        new
                        {
                            Id = 15306603741414412L,
                            Component = "addMenu",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9536),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "新增",
                            Url = "menu/post"
                        },
                        new
                        {
                            Id = 15306603741414413L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9539),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看所有",
                            Url = "menu/get"
                        },
                        new
                        {
                            Id = 15306603741414414L,
                            Component = "editMenu",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9543),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "menu/put"
                        },
                        new
                        {
                            Id = 15306603741414415L,
                            Component = "deleteMenu",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9548),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "删除",
                            Url = "menu/delete"
                        },
                        new
                        {
                            Id = 3L,
                            Component = "nested",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9551),
                            Icon = "nested",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 3,
                            Title = "多级"
                        },
                        new
                        {
                            Id = 4L,
                            Component = "nested/menu1/index",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9553),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 3L,
                            Sort = 1,
                            Title = "子级11"
                        },
                        new
                        {
                            Id = 5L,
                            Component = "nested/menu2/index",
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(9555),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 3L,
                            Sort = 2,
                            Title = "子级22"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 33, DateTimeKind.Local).AddTicks(9001),
                            IsDelete = false,
                            RoleName = "系统管理员"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 31, DateTimeKind.Local).AddTicks(857),
                            IsDelete = false,
                            IsEnable = true,
                            Name = "系统管理员",
                            Password = "670b14728ad9902aecba32e22fa4f6bd",
                            Sex = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 15306603741414400L,
                            CreateTime = new DateTime(2021, 5, 27, 23, 22, 32, 34, DateTimeKind.Local).AddTicks(269),
                            IsDelete = false,
                            RoleId = 999999999L,
                            UserId = 999999999L
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Menu", "Menu")
                        .WithMany("UserRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
