// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WP.NetCore.Repository.EFCore;

namespace WP.NetCore.Repository.EFCore.Migrations
{
    [DbContext(typeof(WPDbContext))]
    [Migration("20210615144230_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.ArticleClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ArticleClass");

                    b.HasData(
                        new
                        {
                            Id = 15333460353893396L,
                            ClassName = ".NetCore",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(9277),
                            IsDelete = false
                        },
                        new
                        {
                            Id = 15333460353893397L,
                            ClassName = "Vue",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(9731),
                            IsDelete = false
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Component")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsButton")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Component = "user/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(4637),
                            Icon = "el-icon-lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 1,
                            Title = "用户管理"
                        },
                        new
                        {
                            Id = 15333460353893377L,
                            Component = "getUser",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(6315),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "查看",
                            Url = "user/get"
                        },
                        new
                        {
                            Id = 15333460353893378L,
                            Component = "addUser",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7578),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "新增",
                            Url = "user/post"
                        },
                        new
                        {
                            Id = 15333460353893379L,
                            Component = "editUser",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7589),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "user/put"
                        },
                        new
                        {
                            Id = 15333460353893380L,
                            Component = "deleteUser",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7593),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "删除",
                            Url = "user/delete"
                        },
                        new
                        {
                            Id = 2L,
                            Component = "role/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7605),
                            Icon = "el-icon-heavy-rain",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 2,
                            Title = "角色管理"
                        },
                        new
                        {
                            Id = 15333460353893381L,
                            Component = "getRole",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7607),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看",
                            Url = "role/get"
                        },
                        new
                        {
                            Id = 15333460353893382L,
                            Component = "addRole",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7610),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "新增",
                            Url = "role/post"
                        },
                        new
                        {
                            Id = 15333460353893383L,
                            Component = "editRole",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7613),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "role/put"
                        },
                        new
                        {
                            Id = 15333460353893384L,
                            Component = "deleteRole",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7617),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "删除",
                            Url = "role/delete"
                        },
                        new
                        {
                            Id = 15333460353893385L,
                            Component = "setPermission",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7621),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "设置权限",
                            Url = "role/setPermission/post"
                        },
                        new
                        {
                            Id = 15333460353893386L,
                            Component = "getPermission",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7661),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看权限",
                            Url = "role/getPermission/get"
                        },
                        new
                        {
                            Id = 6L,
                            Component = "menu/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7665),
                            Icon = "el-icon-cloudy-and-sunny",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 3,
                            Title = "菜单管理"
                        },
                        new
                        {
                            Id = 15333460353893387L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7666),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看菜单树",
                            Url = "menu/getMenuTree/get"
                        },
                        new
                        {
                            Id = 15333460353893388L,
                            Component = "addMenu",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7670),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "新增",
                            Url = "menu/post"
                        },
                        new
                        {
                            Id = 15333460353893389L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7673),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看所有",
                            Url = "menu/get"
                        },
                        new
                        {
                            Id = 15333460353893390L,
                            Component = "editMenu",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7675),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "menu/put"
                        },
                        new
                        {
                            Id = 15333460353893391L,
                            Component = "deleteMenu",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7680),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "删除",
                            Url = "menu/delete"
                        },
                        new
                        {
                            Id = 7L,
                            Component = "article/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7683),
                            Icon = "el-icon-cloudy",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 4,
                            Title = "文章列表"
                        },
                        new
                        {
                            Id = 15333460353893392L,
                            Component = "getArticle",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7685),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "查看",
                            Url = "article/get"
                        },
                        new
                        {
                            Id = 15333460353893393L,
                            Component = "addArticle",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7688),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "新增",
                            Url = "article/post"
                        },
                        new
                        {
                            Id = 15333460353893394L,
                            Component = "editArticle",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7691),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "article/put"
                        },
                        new
                        {
                            Id = 15333460353893395L,
                            Component = "deleteArticle",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7694),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "删除",
                            Url = "article/delete"
                        },
                        new
                        {
                            Id = 8L,
                            Component = "serverlog/request",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7697),
                            Icon = "el-icon-moon",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 5,
                            Title = "审计日志"
                        },
                        new
                        {
                            Id = 1001L,
                            Component = "nested",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7699),
                            Icon = "nested",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 999,
                            Title = "多级"
                        },
                        new
                        {
                            Id = 1002L,
                            Component = "nested/menu1/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7700),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1001L,
                            Sort = 1,
                            Title = "子级11"
                        },
                        new
                        {
                            Id = 1003L,
                            Component = "nested/menu2/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7702),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1001L,
                            Sort = 2,
                            Title = "子级22"
                        },
                        new
                        {
                            Id = 1004L,
                            Component = "nested/menu1/menu1-2/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7704),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1002L,
                            Sort = 3,
                            Title = "子级22"
                        },
                        new
                        {
                            Id = 1005L,
                            Component = "nested/menu1/menu1-2/menu1-2-1/index",
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 573, DateTimeKind.Local).AddTicks(7706),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1004L,
                            Sort = 4,
                            Title = "子级22"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.RequestLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Properties")
                        .HasColumnType("text");

                    b.Property<string>("Timestamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("_ts")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("RequestLog");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 572, DateTimeKind.Local).AddTicks(7744),
                            IsDelete = false,
                            RoleName = "系统管理员"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 570, DateTimeKind.Local).AddTicks(1270),
                            IsDelete = false,
                            IsEnable = true,
                            Name = "系统管理员",
                            Password = "670b14728ad9902aecba32e22fa4f6bd",
                            Sex = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 15333460353893376L,
                            CreateTime = new DateTime(2021, 6, 15, 22, 42, 29, 572, DateTimeKind.Local).AddTicks(8942),
                            IsDelete = false,
                            RoleId = 999999999L,
                            UserId = 999999999L
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Article", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.ArticleClass", "Class")
                        .WithMany("Articles")
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Menu", "Menu")
                        .WithMany("UserRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
