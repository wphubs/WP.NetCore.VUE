// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WP.NetCore.Repository.EFCore;

namespace WP.NetCore.Repository.EFCore.Migrations
{
    [DbContext(typeof(WPDbContext))]
    [Migration("20220424082552_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Browse")
                        .HasColumnType("int");

                    b.Property<long?>("ClassId")
                        .HasColumnType("bigint");

                    b.Property<int>("Comment")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.ArticleClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClassName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ArticleClass");

                    b.HasData(
                        new
                        {
                            Id = 15776165897192474L,
                            ClassName = ".NetCore",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(7038),
                            IsDelete = false
                        },
                        new
                        {
                            Id = 15776165897192475L,
                            ClassName = "Vue",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(7257),
                            IsDelete = false
                        },
                        new
                        {
                            Id = 15776165897192476L,
                            ClassName = "Docker",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(7262),
                            IsDelete = false
                        },
                        new
                        {
                            Id = 15776165897192477L,
                            ClassName = "Other",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(7262),
                            IsDelete = false
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.JobLog", b =>
                {
                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Properties")
                        .HasColumnType("longtext");

                    b.Property<string>("Timestamp")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("_ts")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.ToView("JobLog");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Component")
                        .HasColumnType("longtext");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsButton")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Component = "user/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(4624),
                            Icon = "el-icon-lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 1,
                            Title = "用户管理"
                        },
                        new
                        {
                            Id = 15776165897192449L,
                            Component = "getUser",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5392),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "查看",
                            Url = "user/get"
                        },
                        new
                        {
                            Id = 15776165897192450L,
                            Component = "addUser",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5980),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "新增",
                            Url = "user/post"
                        },
                        new
                        {
                            Id = 15776165897192451L,
                            Component = "editUser",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5987),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "user/put"
                        },
                        new
                        {
                            Id = 15776165897192452L,
                            Component = "deleteUser",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5989),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1L,
                            Sort = 0,
                            Title = "删除",
                            Url = "user/delete"
                        },
                        new
                        {
                            Id = 2L,
                            Component = "role/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5999),
                            Icon = "el-icon-heavy-rain",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 2,
                            Title = "角色管理"
                        },
                        new
                        {
                            Id = 15776165897192453L,
                            Component = "getRole",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(5999),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看",
                            Url = "role/get"
                        },
                        new
                        {
                            Id = 15776165897192454L,
                            Component = "addRole",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6002),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "新增",
                            Url = "role/post"
                        },
                        new
                        {
                            Id = 15776165897192455L,
                            Component = "editRole",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6002),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "role/put"
                        },
                        new
                        {
                            Id = 15776165897192456L,
                            Component = "deleteRole",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6004),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "删除",
                            Url = "role/delete"
                        },
                        new
                        {
                            Id = 15776165897192457L,
                            Component = "setPermission",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6006),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "设置权限",
                            Url = "role/setPermission/post"
                        },
                        new
                        {
                            Id = 15776165897192458L,
                            Component = "getPermission",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6006),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 2L,
                            Sort = 0,
                            Title = "查看权限",
                            Url = "role/getPermission/get"
                        },
                        new
                        {
                            Id = 6L,
                            Component = "menu/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6009),
                            Icon = "el-icon-cloudy-and-sunny",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 3,
                            Title = "菜单管理"
                        },
                        new
                        {
                            Id = 15776165897192459L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6009),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看菜单树",
                            Url = "menu/getMenuTree/get"
                        },
                        new
                        {
                            Id = 15776165897192460L,
                            Component = "addMenu",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6011),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "新增",
                            Url = "menu/post"
                        },
                        new
                        {
                            Id = 15776165897192461L,
                            Component = "getMenu",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6011),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "查看所有",
                            Url = "menu/get"
                        },
                        new
                        {
                            Id = 15776165897192462L,
                            Component = "editMenu",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6014),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "menu/put"
                        },
                        new
                        {
                            Id = 15776165897192463L,
                            Component = "deleteMenu",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6016),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 6L,
                            Sort = 0,
                            Title = "删除",
                            Url = "menu/delete"
                        },
                        new
                        {
                            Id = 7L,
                            Component = "article/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6016),
                            Icon = "el-icon-cloudy",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 4,
                            Title = "文章列表"
                        },
                        new
                        {
                            Id = 15776165897192464L,
                            Component = "getArticle",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6019),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "查看",
                            Url = "article/get"
                        },
                        new
                        {
                            Id = 15776165897192465L,
                            Component = "addArticle",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6021),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "新增",
                            Url = "article/post"
                        },
                        new
                        {
                            Id = 15776165897192466L,
                            Component = "editArticle",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6021),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "编辑",
                            Url = "article/put"
                        },
                        new
                        {
                            Id = 15776165897192467L,
                            Component = "deleteArticle",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6024),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 7L,
                            Sort = 0,
                            Title = "删除",
                            Url = "article/delete"
                        },
                        new
                        {
                            Id = 9L,
                            Component = "job/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6024),
                            Icon = "el-icon-partly-cloudy",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 5,
                            Title = "任务计划"
                        },
                        new
                        {
                            Id = 15776165897192468L,
                            Component = "getJobList",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6026),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "查看",
                            Url = "ScheduleJob/get"
                        },
                        new
                        {
                            Id = 15776165897192469L,
                            Component = "addJob",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6026),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "新增",
                            Url = "ScheduleJob/post"
                        },
                        new
                        {
                            Id = 15776165897192470L,
                            Component = "resumeJob",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6028),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "恢复",
                            Url = "ScheduleJob/ResumeJob"
                        },
                        new
                        {
                            Id = 15776165897192471L,
                            Component = "pauseJob",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6028),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "停止",
                            Url = "ScheduleJob/PauseJob"
                        },
                        new
                        {
                            Id = 15776165897192472L,
                            Component = "deleteJob",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6031),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "删除",
                            Url = "ScheduleJob/Delete"
                        },
                        new
                        {
                            Id = 15776165897192473L,
                            Component = "editJob",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6031),
                            IsButton = true,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 9L,
                            Sort = 0,
                            Title = "修改",
                            Url = "ScheduleJob/put"
                        },
                        new
                        {
                            Id = 8L,
                            Component = "serverlog/request",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6033),
                            Icon = "el-icon-moon",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 7,
                            Title = "审计日志"
                        },
                        new
                        {
                            Id = 10L,
                            Component = "serverlog/job",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6033),
                            Icon = "el-icon-moon-night",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 6,
                            Title = "任务日志"
                        },
                        new
                        {
                            Id = 1001L,
                            Component = "nested",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6033),
                            Icon = "nested",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 0L,
                            Sort = 999,
                            Title = "多级测试"
                        },
                        new
                        {
                            Id = 1002L,
                            Component = "nested/menu1/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6036),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1001L,
                            Sort = 1,
                            Title = "子级11"
                        },
                        new
                        {
                            Id = 1003L,
                            Component = "nested/menu2/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6036),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1001L,
                            Sort = 2,
                            Title = "子级22"
                        },
                        new
                        {
                            Id = 1004L,
                            Component = "nested/menu1/menu1-2/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6038),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1002L,
                            Sort = 3,
                            Title = "子级22"
                        },
                        new
                        {
                            Id = 1005L,
                            Component = "nested/menu1/menu1-2/menu1-2-1/index",
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(6038),
                            Icon = "lightning",
                            IsButton = false,
                            IsDelete = false,
                            IsHidden = false,
                            ParentId = 1004L,
                            Sort = 4,
                            Title = "子级22"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Nothing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Nothing");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.RequestLog", b =>
                {
                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Properties")
                        .HasColumnType("longtext");

                    b.Property<string>("Timestamp")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("_ts")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.ToView("RequestLog");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(314),
                            IsDelete = false,
                            RoleName = "系统管理员"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.ScheduleJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cron")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExecTimes")
                        .HasColumnType("int");

                    b.Property<string>("Headers")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IntervalSecond")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsStart")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobGroup")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("JobName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RequestParameters")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("RequestUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SimpleTimes")
                        .HasColumnType("int");

                    b.Property<int>("TriggerType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScheduleJob");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 999999999L,
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 578, DateTimeKind.Local).AddTicks(9216),
                            IsDelete = false,
                            IsEnable = true,
                            Name = "系统管理员",
                            Password = "670b14728ad9902aecba32e22fa4f6bd",
                            Sex = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("ModifyBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 15776165897192448L,
                            CreateTime = new DateTime(2022, 4, 24, 16, 25, 51, 581, DateTimeKind.Local).AddTicks(1055),
                            IsDelete = false,
                            RoleId = 999999999L,
                            UserId = 999999999L
                        });
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Article", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.ArticleClass", "Class")
                        .WithMany("Articles")
                        .HasForeignKey("ClassId");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.MenuRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Menu", "Menu")
                        .WithMany("UserRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.UserRole", b =>
                {
                    b.HasOne("WP.NetCore.Model.EntityModel.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WP.NetCore.Model.EntityModel.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.ArticleClass", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Menu", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.Role", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WP.NetCore.Model.EntityModel.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
